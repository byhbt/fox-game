{"version":3,"sources":["gameState.js","constants.js","buttons.js","init.js"],"names":["gameState","current","clock","wakeTime","tick","console","log","startGame","wake","handleUserAction","icon","includes","changeWeather","cleanUpPoop","feed","window","bind","TICK_RATE","ICONS","toggleHighlighted","show","document","querySelector","classList","toggle","initButton","selectedIconIndex","addEventListener","buttonClick","target","contains","length","init","nextTimeToTick","Date","now","requestAnimationFrame","nextAnimationFrame"],"mappings":"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","file":"init.5b06ec9c.js","sourceRoot":"../src","sourcesContent":["const gameState = {\n  current: \"INIT\",\n  clock: 1,\n  wakeTime: -1,\n  tick() {\n    this.clock++;\n    console.log(\"clock\", this.clock);\n\n    return this.clock;\n  },\n  startGame() {\n    console.log(\"hatching\");\n    this.current = \"HATCHING\";\n    this.wakeTime = this.clock + 3;\n  },\n  wake() {\n    console.log(\"awoken\");\n    this.current = \"IDLING\";\n    this.wakeTime = -1;\n  },\n  handleUserAction(icon) {\n    if (\n      [\"SLEEP\", \"FEEDING\", \"CELEBRATING\", \"HATCHING\"].includes(this.current)\n    ) {\n      return;\n    }\n\n    if (this.current == \"INIT\" || this.current == \"DEAD\") {\n      this.startGame();\n      return;\n    }\n\n    switch (icon) {\n      case \"weather\":\n        this.changeWeather();\n        break;\n      case \"poop\":\n        this.cleanUpPoop();\n        break;\n      case \"Feed\":\n        this.feed();\n        break;\n    }\n  },\n  changeWeather() {\n    console.log(\"Change weather\");\n  },\n  cleanUpPoop() {\n    console.log(\"Poop\");\n  },\n  feed() {\n    console.log(\"Feed\");\n  },\n};\n\nwindow.gameState = gameState;\nexport const handleUserAction = gameState.handleUserAction.bind(gameState);\nexport default gameState;\n","export const TICK_RATE = 3000;\nexport const ICONS = [\"fish\", \"poop\", \"weather\"];\n\n\n","import { ICONS } from \"./constants\";\n\nconst toggleHighlighted = (icon, show) => {\n  document\n    .querySelector(`.${ICONS[icon]}-icon`)\n    .classList.toggle(\"highlighted\", show);\n};\n\nexport default function initButton(handleUserAction) {\n  let selectedIconIndex = 0;\n\n  function buttonClick({ target }) {\n    if (target.classList.contains(\"left-btn\")) {\n      toggleHighlighted(selectedIconIndex, false);\n      selectedIconIndex = (2 + selectedIconIndex) % ICONS.length;\n      toggleHighlighted(selectedIconIndex, true);\n    } else if (target.classList.contains(\"right-btn\")) {\n      toggleHighlighted(selectedIconIndex, false);\n      selectedIconIndex = (1 + selectedIconIndex) % ICONS.length;\n      toggleHighlighted(selectedIconIndex, true);\n    } else {\n      handleUserAction(ICONS[selectedIconIndex]);\n    }\n  }\n\n  document.querySelector(\".buttons\").addEventListener(\"click\", buttonClick);\n}\n","import gameState, { handleUserAction } from \"./gameState\";\nimport { TICK_RATE } from \"./constants\";\nimport initButtons from \"./buttons\";\n\nasync function init() {\n  console.log(\"Starting game\");\n  // initButtons(gameState.handleUserAction);\n  initButtons(handleUserAction);\n  let nextTimeToTick = Date.now();\n\n  function nextAnimationFrame() {\n    const now = Date.now();\n\n    if (nextTimeToTick <= now) {\n      gameState.tick();\n      nextTimeToTick = now + TICK_RATE;\n    }\n\n    requestAnimationFrame(nextAnimationFrame);\n  }\n\n  requestAnimationFrame(nextAnimationFrame);\n}\n\ninit();\n"]}