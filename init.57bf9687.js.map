{"version":3,"sources":["ui.js","constants.js","gameState.js","buttons.js","init.js"],"names":["modFox","state","document","querySelector","className","modSence","togglePoopBag","show","classList","toggle","TICK_RATE","ICONS","RAIN_CHANCE","SCENES","DAY_LENGTH","NIGHT_LENGTH","getNextHungryTime","clock","Math","floor","random","getNextDieTime","getNextPoopTime","gameState","current","wakeTime","sleepTime","hungryTime","poopTime","dieTime","timeToStartCelebrating","timeToEndCelebrating","tick","console","log","wake","sleep","getHungry","startCelebrating","endCelebrating","die","startGame","scence","scene","determineFoxState","handleUserAction","icon","includes","changeWeather","cleanUpPoop","feed","poop","window","bind","toggleHighlighted","initButton","selectedIconIndex","addEventListener","buttonClick","target","contains","length","init","nextTimeToTick","Date","now","requestAnimationFrame","nextAnimationFrame"],"mappings":"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","file":"init.57bf9687.js","sourceRoot":"../src","sourcesContent":["export const modFox = function modFox(state) {\n  document.querySelector(\".fox\").className = `fox fox-${state}`;\n};\n\nexport const modSence = function modSence(state) {\n  document.querySelector(\".game\").className = `game ${state}`;\n};\n\nexport const togglePoopBag = function (show) {\n  document.querySelector(\".poop-bag\").classList.toggle(\"hidden\", !show);\n};\n\n\n","export const TICK_RATE = 3000;\nexport const ICONS = [\"fish\", \"poop\", \"weather\"];\nexport const RAIN_CHANCE = 0.9;\nexport const SCENES = [\"day\", \"rain\"];\nexport const DAY_LENGTH = 3;\nexport const NIGHT_LENGTH = 3;\n\nexport const getNextHungryTime = (clock) =>\n  Math.floor(Math.random() * 3) + 5 + clock;\nexport const getNextDieTime = (clock) =>\n  Math.floor(Math.random() * 2) + 3 + clock;\nexport const getNextPoopTime = (clock) =>\n  Math.floor(Math.random() * 3) + 4 + clock;\n","import { modFox, modSence, togglePoopBag } from \"./ui\";\nimport {\n  RAIN_CHANCE,\n  SCENES,\n  DAY_LENGTH,\n  NIGHT_LENGTH,\n  getNextDieTime,\n  getNextHungryTime,\n  getNextPoopTime,\n} from \"./constants\";\n\nconst gameState = {\n  current: \"INIT\",\n  clock: 1,\n  wakeTime: -1,\n  sleepTime: -1,\n  hungryTime: -1,\n  poopTime: -1,\n  dieTime: -1,\n  timeToStartCelebrating: -1,\n  timeToEndCelebrating: -1,\n  tick() {\n    this.clock++;\n    console.log(\"clock Count: \", this.clock);\n\n    if (this.clock === this.wakeTime) {\n      this.wake();\n    } else if (this.clock === this.sleepTime) {\n      this.sleep();\n    } else if (this.clock === this.hungryTime) {\n      this.getHungry();\n    } else if (this.clock === this.timeToStartCelebrating) {\n      this.startCelebrating();\n    } else if (this.clock === this.timeToEndCelebrating) {\n      this.endCelebrating();\n    } else if (this.clock === this.dieTime) {\n      this.die();\n    }\n\n    return this.clock;\n  },\n  startGame() {\n    this.current = \"HATCHING\";\n    this.wakeTime = this.clock + 3;\n\n    modFox(\"egg\");\n    modSence(\"day\");\n  },\n  wake() {\n    this.current = \"IDLING\";\n    this.wakeTime = -1;\n\n    // modFox(\"idling\");\n    this.scence = Math.random() > RAIN_CHANCE ? 0 : 1;\n    modSence(SCENES[this.scene]);\n    this.sleepTime = this.clock + DAY_LENGTH;\n    this.hungryTime = getNextHungryTime(this.clock);\n    this.determineFoxState();\n  },\n  sleep() {\n    this.state = \"SLEEP\";\n    modFox(\"sleep\");\n    modSence(\"night\");\n    this.wakeTime = this.clock + NIGHT_LENGTH;\n  },\n  getHungry() {\n    console.log(\"hungry\");\n    this.current = \"HUNGRY\";\n    this.dieTime = getNextDieTime(this.clock);\n    this.hungryTime = -1;\n    modFox(\"hungry\");\n  },\n  die() {\n    console.log(\"die\");\n  },\n  handleUserAction(icon) {\n    if (\n      [\"SLEEP\", \"FEEDING\", \"CELEBRATING\", \"HATCHING\"].includes(this.current)\n    ) {\n      return;\n    }\n\n    if (this.current == \"INIT\" || this.current == \"DEAD\") {\n      this.startGame();\n      return;\n    }\n\n    switch (icon) {\n      case \"weather\":\n        this.changeWeather();\n        break;\n      case \"poop\":\n        this.cleanUpPoop();\n        break;\n      case \"fish\":\n        this.feed();\n        break;\n    }\n  },\n  changeWeather() {\n    console.log(\"Change weather\");\n  },\n  cleanUpPoop() {\n    if (this.current === \"POOPING\") {\n      return;\n    }\n\n    this.dieTime = -1;\n    togglePoopBag(true);\n    this.startCelebrating();\n  },\n  startCelebrating() {\n    this.current = \"CELEBRATING\";\n    modFox(\"celebrate\");\n    this.timeToStartCelebrating = -1;\n    this.timeToEndCelebrating = this.clock + 2;\n  },\n  endCelebrating() {\n    this.timeToEndCelebrating = -1;\n    this.current = \"IDLING\";\n    this.determineFoxState();\n\n    togglePoopBag(false);\n  },\n  determineFoxState() {\n    if (this.current == \"IDLING\") {\n      if (SCENES[this.scence] == \"rain\") {\n        modFox(\"rain\");\n      } else {\n        modFox(\"idling\");\n      }\n    }\n  },\n  feed() {\n    console.log(\"Feed\");\n\n    if (this.current !== \"HUNGRY\") {\n      return;\n    }\n\n    this.current = \"FEEDING\";\n    this.dieTime = -1;\n    this.poopTime = getNextPoopTime(this.clock);\n    modFox(\"eating\");\n\n    this.timeToStartCelebrating = this.clock + 2;\n  },\n  poop() {\n    this.current = \"POOPING\";\n    this.poopTime = -1;\n    this.dieTime = getNextDieTime(this.clock);\n    modFox(\"pooping\");\n  },\n};\n\nwindow.gameState = gameState;\n\nexport const handleUserAction = gameState.handleUserAction.bind(gameState);\nexport default gameState;\n","import { ICONS } from \"./constants\";\n\nconst toggleHighlighted = (icon, show) => {\n  document\n    .querySelector(`.${ICONS[icon]}-icon`)\n    .classList.toggle(\"highlighted\", show);\n};\n\nexport default function initButton(handleUserAction) {\n  let selectedIconIndex = 0;\n\n  function buttonClick({ target }) {\n    if (target.classList.contains(\"left-btn\")) {\n      toggleHighlighted(selectedIconIndex, false);\n      selectedIconIndex = (2 + selectedIconIndex) % ICONS.length;\n      toggleHighlighted(selectedIconIndex, true);\n    } else if (target.classList.contains(\"right-btn\")) {\n      toggleHighlighted(selectedIconIndex, false);\n      selectedIconIndex = (1 + selectedIconIndex) % ICONS.length;\n      toggleHighlighted(selectedIconIndex, true);\n    } else {\n      handleUserAction(ICONS[selectedIconIndex]);\n    }\n  }\n\n  document.querySelector(\".buttons\").addEventListener(\"click\", buttonClick);\n}\n","import gameState, { handleUserAction } from \"./gameState\";\nimport { TICK_RATE } from \"./constants\";\nimport initButtons from \"./buttons\";\n\nasync function init() {\n  console.log(\"Starting game\");\n  // initButtons(gameState.handleUserAction);\n  initButtons(handleUserAction);\n  let nextTimeToTick = Date.now();\n\n  function nextAnimationFrame() {\n    const now = Date.now();\n\n    if (nextTimeToTick <= now) {\n      gameState.tick();\n      nextTimeToTick = now + TICK_RATE;\n    }\n\n    requestAnimationFrame(nextAnimationFrame);\n  }\n\n  requestAnimationFrame(nextAnimationFrame);\n}\n\ninit();\n"]}